C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF Creative Digital Design.
   9           *
  10           * ========================================
  11          */
  12          #include <project.h>
  13          #include <stdio.h>
  14          #define HMC5883L_Address 0x0E //used to mark read address
  15          //used to hold the x y z  data from the sensors
  16          struct XYZ_Cord{
  17                  int16 x;
  18                  int16 y;
  19                  int16 z;
  20          
  21          };
  22          //This is used for reciveing and tranmitting data for the HMC5883L
  23          union HMC5883L
  24          {
  25                  uint8 array[6];
  26                  struct XYZ_Cord Data;
  27          };
  28          //This is used for reciveing and transmitting data for the LIS331HH
  29          union LIS331HH
  30          {
  31                  uint8 array[6];
  32                  struct XYZ_Cord Data;
  33          };
  34          //This enumerator reperesnts all the register addressses on the HMC588L
  35          enum HMC5883L_REG_Addresses{
  36                  CONFIG_REGA, CONFIG_REGB, MODE_REG, XMSB_REG, XLSB_REG,
  37                  ZMSB_REG, ZLSB_REG, YMSB_REG, YLSB_REG, STAT_REG
  38          } HMC5883L_REG_Addresses;
  39          //this enumerator is used to access all the regs on LIS331HH
  40          enum LIS331HH_REG_Addresses{
  41                  CTRL_REG1 =0x20, CTRL_REG2, CTRL_REG3, CTRL_REG4, CTRL_REG5, 
  42                  HP_FILTER_RESET, REFERENCE, STATUS_REG, 
  43                  OUT_X_L, OUT_X_H, OUT_Y_L, OUT_Y_H, OUT_Z_L, OUT_z_H,
  44                  INT1_CFG = 0x30, INT1_SOURCE, INT1_THS, INT1_DURATION, INT2_CFG, INT2_SOURCE, INT2_THS, INT2_DURATION
  45          } LIS331HH_REG_Addresses;
  46          enum HMC5883L_Packet{
  47                  REG_ADDRESS,
  48                  COMMAD,
  49          }HMC5883L_I2C_Packet;
  50          //function prototypes
  51          void Self_Test(void);
  52          void LIS331HH_Config();
  53          void HMC5883L_Config();
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 2   

  54          void Initialization();
  55          void get_LIS331HH_Data(union LIS331HH *Data);
  56          void get_HMC5883L_Data(union HMC5883L *Data);
  57          void get_All_data(uint8 *array);
  58          uint8 i2c_write(uint8 subAddr, uint8 *buffer, uint8 buff_size);
  59          uint8 i2c_read(uint8 subAddr, uint8 *buffer, uint8 buff_size);
  60          void menu();
  61          
  62          int main()
  63          {
  64   1          /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  65   1              //int size = 6;
  66   1              int n;
  67   1              char buffer[123];
  68   1              //uint8 *array;
  69   1              union HMC5883L Mag_Data;
  70   1              union LIS331HH Accl_Data;
  71   1      
  72   1              Initialization();
  73   1          CyGlobalIntEnable;  /* Uncomment this line to enable global interrupts. */
  74   1          Mag_Data.Data.x = 10;
  75   1              Mag_Data.Data.y = 11;
  76   1              Mag_Data.Data.z = 12;
  77   1              DATA_COM_PutString(" Main \n");
  78   1              for(;;)
  79   1          {
  80   2              CyDelay(10);
  81   2                      get_HMC5883L_Data(&Mag_Data);
  82   2                      //DATA_COM_PutArray(array,size);
  83   2                      //get_LIS331HH_Data(&Accl_Data);
  84   2                      n= sprintf(buffer, "X: %d \nY: %d \nZ: %d \n",(int) Mag_Data.Data.x, Mag_Data.Data.y,Mag_Data.Data.z);  
  85   2                      //n= sprintf(buffer, "X: %d \nY: %d \nZ: %d \n",(int) Accl_Data.Data.x, Accl_Data.Data.y,Accl_Data.Data.
             -z);
  86   2                      DATA_COM_PutArray(buffer,n);
  87   2          }
  88   1      }
*** WARNING C280 IN LINE 70 OF .\main.c: 'Accl_Data': unreferenced local variable
  89          void Initialization()
  90          {
  91   1              CS_Write(1);
  92   1              LIS331HH_SPI_Start();
  93   1              HMC5883L_I2C_Start();
  94   1              CONFIG_COM_Start();
  95   1              DATA_COM_Start();
  96   1              DATA_COM_PutString("Initial \n");
  97   1              HMC5883L_Config();
  98   1              LIS331HH_Config();
  99   1      }
 100          void LIS331HH_Config()
 101          {
 102   1              /* Setup CTRL_REG1
 103   1              Bits:
 104   1              PM2 PM1 PM0 DR1 DR0 Zen Yen Xen
 105   1              PM2PM1PM0: Power mode (001 = Normal Mode)
 106   1              DR1DR0: Data rate (00=50Hz, 01=100Hz, 10=400Hz, 11=1000Hz)
 107   1              Zen, Yen, Xen: Z enable, Y enable, X enable
 108   1              */
 109   1              CS_Write(0);
 110   1              CyDelay(1);
 111   1              LIS331HH_SPI_WriteTxData(CTRL_REG1);
 112   1              LIS331HH_SPI_WriteTxData(0x37); //normal mode, 1000HZ, xyz-enabled
 113   1              CS_Write(1);
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 3   

 114   1              CyDelay(100);
 115   1              /* Setup CTRL_REG2
 116   1              turn off high pass filter
 117   1              */
 118   1              CS_Write(0);
 119   1              CyDelay(1);
 120   1              LIS331HH_SPI_WriteTxData(CTRL_REG2);
 121   1              LIS331HH_SPI_WriteTxData(0x00);//HP filteron( cuttoff @8MHz ) = 0x60, HPfilter OFF = 0x00
 122   1              CS_Write(1);
 123   1              CyDelay(100);
 124   1              /* Setup CTRL_REG3
 125   1              Bits:
 126   1              IHL PP_OD LIR2 I2_CFG1 I2_CFG0 LIR1 I1_CFG1 I1_CFG0
 127   1              IHL: interrupt high low (0=active high)
 128   1              PP_OD: push-pull/open drain selection (0=push-pull)
 129   1              LIR2: latch interrupt request on INT2_SRC register (0=interrupt request not latched)
 130   1              I2_CFG1, I2_CFG0: data signal on INT 2 pad control bits
 131   1              LIR1: latch interrupt request on INT1_SRC register (0=interrupt request not latched)
 132   1              I1_CFG1, I1_CFG0: data signal on INT 1 pad control bits
 133   1      
 134   1              Data signal on pad
 135   1              I1(2)_CFG1 I1(2)_CFG0 INT 1(2) pad
 136   1              0 0 interrupt 1(2) source
 137   1              0 1 interrupt 1 source or interrupt 2 source
 138   1              1 0 data ready
 139   1              1 1 boot running
 140   1      
 141   1              */
 142   1      
 143   1              CS_Write(0);
 144   1              CyDelay(1);
 145   1              LIS331HH_SPI_WriteTxData(CTRL_REG3);
 146   1              LIS331HH_SPI_WriteTxData(0x00);
 147   1              CS_Write(1);
 148   1              CyDelay(100);
 149   1              /* Setup CTRL_REG4
 150   1              Bits:
 151   1              BDU BLE FS1 FS0 STsign 0 ST SIM
 152   1              BDU: Block data update (0=continuous update)
 153   1              BLE: Big/little endian data (0=accel data LSB at LOW address)
 154   1              FS1FS0: Full-scale selection (00 = +/-6G, 01 = +/-12G, 11 = +/-24G)
 155   1              STsign: selft-test sign (default 0=plus)
 156   1              ST: self-test enable (default 0=disabled)
 157   1              SIM: SPI mode selection(default 0=4 wire interface, 1=3 wire interface)
 158   1              */
 159   1              CS_Write(0);
 160   1              CyDelay(1);
 161   1              LIS331HH_SPI_WriteTxData(CTRL_REG4);
 162   1              LIS331HH_SPI_WriteTxData(0x30); //24g
 163   1              CS_Write(1);
 164   1              CyDelay(100);
 165   1      }
 166          void HMC5883L_Config()
 167          {
 168   1              uint8 slave= 0x1E;
 169   1              uint8 array[2];
 170   1              array [0] = 0x80;
 171   1              i2c_write(0x11,array,1);
 172   1              
 173   1              array [0] = 1;
 174   1              i2c_write(0x10,array,1);
 175   1      
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 4   

 176   1      //      HMC5883L_I2C_MasterClearStatus();
 177   1      //      
 178   1      //      array[REG_ADDRESS] = 0x02u;
 179   1      //      array[COMMAD] = 0x00u; //continuous measurment mode
 180   1      //      
 181   1      //      HMC5883L_I2C_MasterSendStart(slave,0u);
 182   1      //      HMC5883L_I2C_MasterWriteByte(array[REG_ADDRESS]);
 183   1      //      HMC5883L_I2C_MasterWriteByte(array[COMMAD]);
 184   1      //      HMC5883L_I2C_MasterSendStop();
 185   1      //      CyDelay(10);
 186   1      ////    array[REG_ADDRESS] = 0x10u;
 187   1      ////    array[COMMAD] = 0x3u;
 188   1      ////    HMC5883L_I2C_MasterSendStart(0x0E,0u);
 189   1      ////    HMC5883L_I2C_MasterWriteByte(array[REG_ADDRESS]);
 190   1      ////    HMC5883L_I2C_MasterWriteByte(array[COMMAD]);
 191   1      ////    HMC5883L_I2C_MasterSendStop();
 192   1      ////    CyDelay(10);
 193   1      }
 194          void get_LIS331HH_Data(union LIS331HH *Data)
 195          {
 196   1              
 197   1              CS_Write(0);
 198   1              CyDelay(10);
 199   1              LIS331HH_SPI_WriteTxData(0xE8);//read bit | consecutive measure bit | 0x28 = 0xe8       
 200   1              LIS331HH_SPI_WriteTxData(0x00);
 201   1              Data->array[1] = LIS331HH_SPI_ReadRxData();
 202   1              LIS331HH_SPI_WriteTxData(0x00);
 203   1              Data->array[0] = LIS331HH_SPI_ReadRxData();
 204   1              LIS331HH_SPI_WriteTxData(0x00);
 205   1              Data->array[3] = LIS331HH_SPI_ReadRxData();
 206   1              LIS331HH_SPI_WriteTxData(0x00);
 207   1              Data->array[2] = LIS331HH_SPI_ReadRxData();
 208   1              LIS331HH_SPI_WriteTxData(0x00);
 209   1              Data->array[5] = LIS331HH_SPI_ReadRxData();
 210   1              LIS331HH_SPI_WriteTxData(0x00);
 211   1              Data->array[4] = LIS331HH_SPI_ReadRxData();
 212   1              CS_Write(1);
 213   1              CyDelay(100);
 214   1      }
 215          void get_HMC5883L_Data(union HMC5883L *Data)
 216          {
 217   1      //      HMC5883L_I2C_MasterClearStatus();
 218   1      //      HMC5883L_I2C_MasterSendStart(HMC5883L_Address,0); //could throw error here
 219   1      //      HMC5883L_I2C_MasterWriteByte(0x03); //could throw error here //select register 3, X MSB register
 220   1      //      HMC5883L_I2C_MasterSendStop();
 221   1              uint8 array[6];
 222   1              
 223   1              
 224   1              i2c_read(0x03,array,6);
 225   1              
 226   1              Data->array[0] =  array[0];
 227   1              Data->array[1] =  array[1];
 228   1              Data->array[2] =  array[2];
 229   1              Data->array[3] =  array[3];
 230   1              Data->array[4] =  array[4];
 231   1              Data->array[5] =  array[5];
 232   1      //      HMC5883L_I2C_MasterClearStatus();
 233   1      //      HMC5883L_I2C_MasterSendStart(HMC5883L_Address,1);
 234   1      //      Data->array[0]=HMC5883L_I2C_MasterReadByte(1);
 235   1      //      Data->array[1]=HMC5883L_I2C_MasterReadByte(1);
 236   1      //      Data->array[2]=HMC5883L_I2C_MasterReadByte(1);
 237   1      //      Data->array[3]=HMC5883L_I2C_MasterReadByte(1);
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 5   

 238   1      //      Data->array[4]=HMC5883L_I2C_MasterReadByte(1);
 239   1      //      Data->array[5]=HMC5883L_I2C_MasterReadByte(0);
 240   1              
 241   1      }
 242          void menu()
 243          {
 244   1              CONFIG_COM_PutString("Welcome to the Desktop Tester Configuration & Testering Tool \n");
 245   1              CONFIG_COM_PutString("Menu:\n");
 246   1              CONFIG_COM_PutString("1: Test Acclermeter \n");
 247   1              CONFIG_COM_PutString("2: Test Magnetmeter \n");
 248   1              CONFIG_COM_PutString("3: Read Acclermeter \n");
 249   1              CONFIG_COM_PutString("4: Read Magnetmere \n");
 250   1              CONFIG_COM_PutString("5: Configuration \n");
 251   1      }
 252          void get_All_data(uint8 *array)
 253          {
 254   1              //union LIS331HH *LIS331HH_Data;
 255   1              union HMC5883L *HMC5883L_Data;
 256   1              
 257   1              //get_LIS331HH_Data(LIS331HH_Data);
 258   1              //memcpy(array,LIS331HH_Data->array, 3 * sizeof(uint8)); //copies the Accelerometer data into the array
 259   1              get_HMC5883L_Data(HMC5883L_Data);
 260   1              memcpy(array + 6, HMC5883L_Data->array, 6 * sizeof(uint8)); // copies the magnetormeter data into the arr
             -ay 
 261   1      }
 262          uint8 i2c_write(uint8 subAddr, uint8 *buffer, uint8 buff_size) {
 263   1      
 264   1              int i;
 265   1              uint8 status;
 266   1              char array[10];
 267   1              HMC5883L_I2C_MasterClearStatus();
 268   1      
 269   1              
 270   1              //Set subaddr
 271   1              status = HMC5883L_I2C_MasterSendStart(HMC5883L_Address, 0);
 272   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 273   2                      i= sprintf(array, "1: %d",status);
 274   2                      DATA_COM_PutArray(array,i);
 275   2                      return status;
 276   2              }
 277   1         
 278   1           
 279   1              status = HMC5883L_I2C_MasterWriteByte(subAddr);
 280   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 281   2                      i= sprintf(array, "2: %d",status);
 282   2                      DATA_COM_PutArray(array,i);
 283   2                      return status;
 284   2              }
 285   1                     
 286   1              for (i=0;i<buff_size;i++) {
 287   2                      status = HMC5883L_I2C_MasterWriteByte(buffer[i]);
 288   2                      if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 289   3                              return status;
 290   3                              i= sprintf(array, "3: %d",status);
 291   3                      DATA_COM_PutArray(array,i);
 292   3                      }
 293   2              }
 294   1                        
 295   1                      status = HMC5883L_I2C_MasterSendStop();
 296   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 297   2                      return status;
 298   2                      i= sprintf(array, "4: %d",status);
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 6   

 299   2                      DATA_COM_PutArray(array,i);
 300   2              }   
 301   1              return status;
 302   1      }
 303          uint8 i2c_read(uint8 subAddr, uint8 *buffer, uint8 buff_size) {
 304   1      
 305   1              uint8 status;
 306   1              int i;
 307   1              char array[10];
 308   1              
 309   1              HMC5883L_I2C_MasterClearStatus();
 310   1      DATA_COM_PutString("make it here?  \n"); 
 311   1              //Set subaddr
 312   1              status = HMC5883L_I2C_MasterSendStart(HMC5883L_Address, 0);
 313   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 314   2                      i= sprintf(array, "X: %d",status);
 315   2                      DATA_COM_PutArray(array,i);
 316   2                      return status;
 317   2              }
 318   1              DATA_COM_PutString("make it here?  \n");        
 319   1              buffer[0] = HMC5883L_I2C_MasterReadByte(0);
 320   1                         
 321   1              status = HMC5883L_I2C_MasterWriteByte(subAddr);
 322   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 323   2                      return status;
 324   2              }
 325   1                     
 326   1              status = HMC5883L_I2C_MasterSendRestart(HMC5883L_Address, 1);
 327   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 328   2                      return status;
 329   2              }               
 330   1                     
 331   1              for (i=0;i<buff_size;i++) {
 332   2                      buffer[i] = HMC5883L_I2C_MasterReadByte( (i<(buff_size-1) ) );
 333   2              }
 334   1       
 335   1              status = HMC5883L_I2C_MasterSendStop();
 336   1              if (status != HMC5883L_I2C_MSTR_NO_ERROR) {
 337   2              return status;
 338   2              }  
 339   1              return 0;
 340   1      }
 341          
 342          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 72
0000 120000      R     LCALL   Initialization
                                           ; SOURCE LINE # 73
0003 D2AF              SETB    EA
0005 9044F4            MOV     DPTR,#044F4H
0008 74FD              MOV     A,#0FDH
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
000B 900000      R     MOV     DPTR,#Mag_Data
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 740A              MOV     A,#0AH
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
0014 900000      R     MOV     DPTR,#Mag_Data+02H
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A 740B              MOV     A,#0BH
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
001D 900000      R     MOV     DPTR,#Mag_Data+04H
0020 E4                CLR     A
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 740C              MOV     A,#0CH
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0026 7BFF              MOV     R3,#0FFH
0028 7A00        R     MOV     R2,#HIGH ?SC_0
002A 7900        R     MOV     R1,#LOW ?SC_0
002C 120000      E     LCALL   _DATA_COM_PutString
                                           ; SOURCE LINE # 78
002F         ?C0001:
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
002F 7F0A              MOV     R7,#0AH
0031 7E00              MOV     R6,#00H
0033 7D00              MOV     R5,#00H
0035 7C00              MOV     R4,#00H
0037 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 81
003A 7B01              MOV     R3,#01H
003C 7A00        R     MOV     R2,#HIGH Mag_Data
003E 7900        R     MOV     R1,#LOW Mag_Data
0040 120000      R     LCALL   _get_HMC5883L_Data
                                           ; SOURCE LINE # 84
0043 7B01              MOV     R3,#01H
0045 7A00        R     MOV     R2,#HIGH buffer
0047 7900        R     MOV     R1,#LOW buffer
0049 C003              PUSH    AR3
004B C002              PUSH    AR2
004D C001              PUSH    AR1
004F 7BFF              MOV     R3,#0FFH
0051 7A00        R     MOV     R2,#HIGH ?SC_8
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 8   

0053 7900        R     MOV     R1,#LOW ?SC_8
0055 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0058 120000      E     LCALL   ?C?PSTXDATA
005B 900000      R     MOV     DPTR,#Mag_Data
005E E0                MOVX    A,@DPTR
005F FE                MOV     R6,A
0060 A3                INC     DPTR
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0066 EE                MOV     A,R6
0067 F0                MOVX    @DPTR,A
0068 A3                INC     DPTR
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
006B 900000      R     MOV     DPTR,#Mag_Data+02H
006E E0                MOVX    A,@DPTR
006F FE                MOV     R6,A
0070 A3                INC     DPTR
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      E     MOV     DPTR,#?_sprintf?BYTE+08H
0076 EE                MOV     A,R6
0077 F0                MOVX    @DPTR,A
0078 A3                INC     DPTR
0079 EF                MOV     A,R7
007A F0                MOVX    @DPTR,A
007B 900000      R     MOV     DPTR,#Mag_Data+04H
007E E0                MOVX    A,@DPTR
007F FE                MOV     R6,A
0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 900000      E     MOV     DPTR,#?_sprintf?BYTE+0AH
0086 EE                MOV     A,R6
0087 F0                MOVX    @DPTR,A
0088 A3                INC     DPTR
0089 EF                MOV     A,R7
008A F0                MOVX    @DPTR,A
008B D001              POP     AR1
008D D002              POP     AR2
008F D003              POP     AR3
0091 120000      E     LCALL   _sprintf
0094 900000      R     MOV     DPTR,#n
0097 EE                MOV     A,R6
0098 F0                MOVX    @DPTR,A
0099 A3                INC     DPTR
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
009C 7B01              MOV     R3,#01H
009E 7A00        R     MOV     R2,#HIGH buffer
00A0 7900        R     MOV     R1,#LOW buffer
00A2 900000      R     MOV     DPTR,#n
00A5 E0                MOVX    A,@DPTR
00A6 FE                MOV     R6,A
00A7 A3                INC     DPTR
00A8 E0                MOVX    A,@DPTR
00A9 FF                MOV     R7,A
00AA AD07              MOV     R5,AR7
00AC 120000      E     LCALL   _DATA_COM_PutArray
                                           ; SOURCE LINE # 87
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 9   

00AF 020000      R     LJMP    ?C0001
00B2 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION Initialization (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0000 7F01              MOV     R7,#01H
0002 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 92
0005 120000      E     LCALL   LIS331HH_SPI_Start
                                           ; SOURCE LINE # 93
0008 120000      E     LCALL   HMC5883L_I2C_Start
                                           ; SOURCE LINE # 94
000B 120000      E     LCALL   CONFIG_COM_Start
                                           ; SOURCE LINE # 95
000E 120000      E     LCALL   DATA_COM_Start
                                           ; SOURCE LINE # 96
0011 7BFF              MOV     R3,#0FFH
0013 7A00        R     MOV     R2,#HIGH ?SC_30
0015 7900        R     MOV     R1,#LOW ?SC_30
0017 120000      E     LCALL   _DATA_COM_PutString
                                           ; SOURCE LINE # 97
001A 120000      R     LCALL   HMC5883L_Config
                                           ; SOURCE LINE # 98
001D 120000      R     LCALL   LIS331HH_Config
                                           ; SOURCE LINE # 99
0020 22                RET     
             ; FUNCTION Initialization (END)

             ; FUNCTION LIS331HH_Config (BEGIN)
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 109
0000 7F00              MOV     R7,#00H
0002 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 110
0005 7F01              MOV     R7,#01H
0007 7E00              MOV     R6,#00H
0009 7D00              MOV     R5,#00H
000B 7C00              MOV     R4,#00H
000D 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 111
0010 7F20              MOV     R7,#020H
0012 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 112
0015 7F37              MOV     R7,#037H
0017 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 113
001A 7F01              MOV     R7,#01H
001C 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 114
001F 7F64              MOV     R7,#064H
0021 7E00              MOV     R6,#00H
0023 7D00              MOV     R5,#00H
0025 7C00              MOV     R4,#00H
0027 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 118
002A 7F00              MOV     R7,#00H
002C 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 119
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 10  

002F 7F01              MOV     R7,#01H
0031 7E00              MOV     R6,#00H
0033 7D00              MOV     R5,#00H
0035 7C00              MOV     R4,#00H
0037 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 120
003A 7F21              MOV     R7,#021H
003C 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 121
003F 7F00              MOV     R7,#00H
0041 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 122
0044 7F01              MOV     R7,#01H
0046 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 123
0049 7F64              MOV     R7,#064H
004B 7E00              MOV     R6,#00H
004D 7D00              MOV     R5,#00H
004F 7C00              MOV     R4,#00H
0051 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 143
0054 7F00              MOV     R7,#00H
0056 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 144
0059 7F01              MOV     R7,#01H
005B 7E00              MOV     R6,#00H
005D 7D00              MOV     R5,#00H
005F 7C00              MOV     R4,#00H
0061 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 145
0064 7F22              MOV     R7,#022H
0066 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 146
0069 7F00              MOV     R7,#00H
006B 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 147
006E 7F01              MOV     R7,#01H
0070 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 148
0073 7F64              MOV     R7,#064H
0075 7E00              MOV     R6,#00H
0077 7D00              MOV     R5,#00H
0079 7C00              MOV     R4,#00H
007B 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 159
007E 7F00              MOV     R7,#00H
0080 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 160
0083 7F01              MOV     R7,#01H
0085 7E00              MOV     R6,#00H
0087 7D00              MOV     R5,#00H
0089 7C00              MOV     R4,#00H
008B 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 161
008E 7F23              MOV     R7,#023H
0090 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 162
0093 7F30              MOV     R7,#030H
0095 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 163
0098 7F01              MOV     R7,#01H
009A 120000      E     LCALL   _CS_Write
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 11  

                                           ; SOURCE LINE # 164
009D 7F64              MOV     R7,#064H
009F 7E00              MOV     R6,#00H
00A1 7D00              MOV     R5,#00H
00A3 7C00              MOV     R4,#00H
00A5 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 165
00A8 22                RET     
             ; FUNCTION LIS331HH_Config (END)

             ; FUNCTION HMC5883L_Config (BEGIN)
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
0000 900000      R     MOV     DPTR,#slave
0003 741E              MOV     A,#01EH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0006 900000      R     MOV     DPTR,#array
0009 7480              MOV     A,#080H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
000C 7B01              MOV     R3,#01H
000E 7A00        R     MOV     R2,#HIGH array
0010 7900        R     MOV     R1,#LOW array
0012 900000      R     MOV     DPTR,#?_i2c_write?BYTE+04H
0015 7401              MOV     A,#01H
0017 F0                MOVX    @DPTR,A
0018 7F11              MOV     R7,#011H
001A 120000      R     LCALL   _i2c_write
                                           ; SOURCE LINE # 173
001D 900000      R     MOV     DPTR,#array
0020 7401              MOV     A,#01H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
0023 7B01              MOV     R3,#01H
0025 7A00        R     MOV     R2,#HIGH array
0027 7900        R     MOV     R1,#LOW array
0029 900000      R     MOV     DPTR,#?_i2c_write?BYTE+04H
002C 7401              MOV     A,#01H
002E F0                MOVX    @DPTR,A
002F 7F10              MOV     R7,#010H
0031 120000      R     LCALL   _i2c_write
                                           ; SOURCE LINE # 193
0034 22                RET     
             ; FUNCTION HMC5883L_Config (END)

             ; FUNCTION _get_LIS331HH_Data (BEGIN)
                                           ; SOURCE LINE # 194
0000 900000      R     MOV     DPTR,#Data
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 197
0006 7F00              MOV     R7,#00H
0008 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 198
000B 7F0A              MOV     R7,#0AH
000D 7E00              MOV     R6,#00H
000F 7D00              MOV     R5,#00H
0011 7C00              MOV     R4,#00H
0013 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 199
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 12  

0016 7FE8              MOV     R7,#0E8H
0018 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 200
001B 7F00              MOV     R7,#00H
001D 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 201
0020 120000      E     LCALL   LIS331HH_SPI_ReadRxData
0023 900000      R     MOV     DPTR,#Data
0026 120000      E     LCALL   ?C?PLDXDATA
0029 E9                MOV     A,R1
002A 2401              ADD     A,#01H
002C F9                MOV     R1,A
002D EA                MOV     A,R2
002E 3400              ADDC    A,#00H
0030 FA                MOV     R2,A
0031 EF                MOV     A,R7
0032 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 202
0035 7F00              MOV     R7,#00H
0037 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 203
003A 120000      E     LCALL   LIS331HH_SPI_ReadRxData
003D 900000      R     MOV     DPTR,#Data
0040 120000      E     LCALL   ?C?PLDXDATA
0043 EF                MOV     A,R7
0044 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 204
0047 7F00              MOV     R7,#00H
0049 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 205
004C 120000      E     LCALL   LIS331HH_SPI_ReadRxData
004F 900000      R     MOV     DPTR,#Data
0052 120000      E     LCALL   ?C?PLDXDATA
0055 E9                MOV     A,R1
0056 2403              ADD     A,#03H
0058 F9                MOV     R1,A
0059 EA                MOV     A,R2
005A 3400              ADDC    A,#00H
005C FA                MOV     R2,A
005D EF                MOV     A,R7
005E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 206
0061 7F00              MOV     R7,#00H
0063 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 207
0066 120000      E     LCALL   LIS331HH_SPI_ReadRxData
0069 900000      R     MOV     DPTR,#Data
006C 120000      E     LCALL   ?C?PLDXDATA
006F E9                MOV     A,R1
0070 2402              ADD     A,#02H
0072 F9                MOV     R1,A
0073 EA                MOV     A,R2
0074 3400              ADDC    A,#00H
0076 FA                MOV     R2,A
0077 EF                MOV     A,R7
0078 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 208
007B 7F00              MOV     R7,#00H
007D 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 209
0080 120000      E     LCALL   LIS331HH_SPI_ReadRxData
0083 900000      R     MOV     DPTR,#Data
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 13  

0086 120000      E     LCALL   ?C?PLDXDATA
0089 E9                MOV     A,R1
008A 2405              ADD     A,#05H
008C F9                MOV     R1,A
008D EA                MOV     A,R2
008E 3400              ADDC    A,#00H
0090 FA                MOV     R2,A
0091 EF                MOV     A,R7
0092 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 210
0095 7F00              MOV     R7,#00H
0097 120000      E     LCALL   _LIS331HH_SPI_WriteTxData
                                           ; SOURCE LINE # 211
009A 120000      E     LCALL   LIS331HH_SPI_ReadRxData
009D 900000      R     MOV     DPTR,#Data
00A0 120000      E     LCALL   ?C?PLDXDATA
00A3 E9                MOV     A,R1
00A4 2404              ADD     A,#04H
00A6 F9                MOV     R1,A
00A7 EA                MOV     A,R2
00A8 3400              ADDC    A,#00H
00AA FA                MOV     R2,A
00AB EF                MOV     A,R7
00AC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 212
00AF 7F01              MOV     R7,#01H
00B1 120000      E     LCALL   _CS_Write
                                           ; SOURCE LINE # 213
00B4 7F64              MOV     R7,#064H
00B6 7E00              MOV     R6,#00H
00B8 7D00              MOV     R5,#00H
00BA 7C00              MOV     R4,#00H
00BC 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 214
00BF 22                RET     
             ; FUNCTION _get_LIS331HH_Data (END)

             ; FUNCTION _get_HMC5883L_Data (BEGIN)
                                           ; SOURCE LINE # 215
0000 900000      R     MOV     DPTR,#Data
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 224
0006 7B01              MOV     R3,#01H
0008 7A00        R     MOV     R2,#HIGH array
000A 7900        R     MOV     R1,#LOW array
000C 900000      R     MOV     DPTR,#?_i2c_read?BYTE+04H
000F 7406              MOV     A,#06H
0011 F0                MOVX    @DPTR,A
0012 7F03              MOV     R7,#03H
0014 120000      R     LCALL   _i2c_read
                                           ; SOURCE LINE # 226
0017 900000      R     MOV     DPTR,#array
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C 900000      R     MOV     DPTR,#Data
001F 120000      E     LCALL   ?C?PLDXDATA
0022 EF                MOV     A,R7
0023 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 227
0026 900000      R     MOV     DPTR,#array+01H
0029 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 14  

002A FF                MOV     R7,A
002B 900000      R     MOV     DPTR,#Data
002E 120000      E     LCALL   ?C?PLDXDATA
0031 E9                MOV     A,R1
0032 2401              ADD     A,#01H
0034 F9                MOV     R1,A
0035 EA                MOV     A,R2
0036 3400              ADDC    A,#00H
0038 FA                MOV     R2,A
0039 EF                MOV     A,R7
003A 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 228
003D 900000      R     MOV     DPTR,#array+02H
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
0042 900000      R     MOV     DPTR,#Data
0045 120000      E     LCALL   ?C?PLDXDATA
0048 E9                MOV     A,R1
0049 2402              ADD     A,#02H
004B F9                MOV     R1,A
004C EA                MOV     A,R2
004D 3400              ADDC    A,#00H
004F FA                MOV     R2,A
0050 EF                MOV     A,R7
0051 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 229
0054 900000      R     MOV     DPTR,#array+03H
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 900000      R     MOV     DPTR,#Data
005C 120000      E     LCALL   ?C?PLDXDATA
005F E9                MOV     A,R1
0060 2403              ADD     A,#03H
0062 F9                MOV     R1,A
0063 EA                MOV     A,R2
0064 3400              ADDC    A,#00H
0066 FA                MOV     R2,A
0067 EF                MOV     A,R7
0068 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 230
006B 900000      R     MOV     DPTR,#array+04H
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 900000      R     MOV     DPTR,#Data
0073 120000      E     LCALL   ?C?PLDXDATA
0076 E9                MOV     A,R1
0077 2404              ADD     A,#04H
0079 F9                MOV     R1,A
007A EA                MOV     A,R2
007B 3400              ADDC    A,#00H
007D FA                MOV     R2,A
007E EF                MOV     A,R7
007F 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 231
0082 900000      R     MOV     DPTR,#array+05H
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#Data
008A 120000      E     LCALL   ?C?PLDXDATA
008D E9                MOV     A,R1
008E 2405              ADD     A,#05H
0090 F9                MOV     R1,A
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 15  

0091 EA                MOV     A,R2
0092 3400              ADDC    A,#00H
0094 FA                MOV     R2,A
0095 EF                MOV     A,R7
0096 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 241
0099 22                RET     
             ; FUNCTION _get_HMC5883L_Data (END)

             ; FUNCTION menu (BEGIN)
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH ?SC_40
0004 7900        R     MOV     R1,#LOW ?SC_40
0006 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 245
0009 7BFF              MOV     R3,#0FFH
000B 7A00        R     MOV     R2,#HIGH ?SC_103
000D 7900        R     MOV     R1,#LOW ?SC_103
000F 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 246
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH ?SC_110
0016 7900        R     MOV     R1,#LOW ?SC_110
0018 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 247
001B 7BFF              MOV     R3,#0FFH
001D 7A00        R     MOV     R2,#HIGH ?SC_132
001F 7900        R     MOV     R1,#LOW ?SC_132
0021 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 248
0024 7BFF              MOV     R3,#0FFH
0026 7A00        R     MOV     R2,#HIGH ?SC_154
0028 7900        R     MOV     R1,#LOW ?SC_154
002A 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 249
002D 7BFF              MOV     R3,#0FFH
002F 7A00        R     MOV     R2,#HIGH ?SC_176
0031 7900        R     MOV     R1,#LOW ?SC_176
0033 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 250
0036 7BFF              MOV     R3,#0FFH
0038 7A00        R     MOV     R2,#HIGH ?SC_197
003A 7900        R     MOV     R1,#LOW ?SC_197
003C 120000      E     LCALL   _CONFIG_COM_PutString
                                           ; SOURCE LINE # 251
003F 22                RET     
             ; FUNCTION menu (END)

             ; FUNCTION _get_All_data (BEGIN)
                                           ; SOURCE LINE # 252
0000 900000      R     MOV     DPTR,#array
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 259
0006 900000      R     MOV     DPTR,#HMC5883L_Data
0009 120000      E     LCALL   ?C?PLDXDATA
000C 120000      R     LCALL   _get_HMC5883L_Data
                                           ; SOURCE LINE # 260
000F 900000      R     MOV     DPTR,#HMC5883L_Data
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 16  

0012 120000      E     LCALL   ?C?PLDXDATA
0015 C003              PUSH    AR3
0017 C002              PUSH    AR2
0019 C001              PUSH    AR1
001B 900000      R     MOV     DPTR,#array
001E 120000      E     LCALL   ?C?PLDXDATA
0021 E9                MOV     A,R1
0022 2406              ADD     A,#06H
0024 F9                MOV     R1,A
0025 EA                MOV     A,R2
0026 3400              ADDC    A,#00H
0028 FA                MOV     R2,A
0029 A801              MOV     R0,AR1
002B AC02              MOV     R4,AR2
002D AD03              MOV     R5,AR3
002F D001              POP     AR1
0031 D002              POP     AR2
0033 D003              POP     AR3
0035 7E00              MOV     R6,#00H
0037 7F06              MOV     R7,#06H
0039 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 261
003C 22                RET     
             ; FUNCTION _get_All_data (END)

             ; FUNCTION _i2c_write (BEGIN)
                                           ; SOURCE LINE # 262
0000 900000      R     MOV     DPTR,#subAddr
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#buffer
0008 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 267
000B 120000      E     LCALL   HMC5883L_I2C_MasterClearStatus
                                           ; SOURCE LINE # 271
000E 7D00              MOV     R5,#00H
0010 7F0E              MOV     R7,#0EH
0012 120000      E     LCALL   _HMC5883L_I2C_MasterSendStart
0015 900000      R     MOV     DPTR,#status
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
001A 900000      R     MOV     DPTR,#status
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 604C              JZ      ?C0011
                                           ; SOURCE LINE # 273
0022 7B01              MOV     R3,#01H
0024 7A00        R     MOV     R2,#HIGH array
0026 7900        R     MOV     R1,#LOW array
0028 C003              PUSH    AR3
002A C002              PUSH    AR2
002C C001              PUSH    AR1
002E 7BFF              MOV     R3,#0FFH
0030 7A00        R     MOV     R2,#HIGH ?SC_216
0032 7900        R     MOV     R1,#LOW ?SC_216
0034 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0037 120000      E     LCALL   ?C?PSTXDATA
003A 900000      R     MOV     DPTR,#status
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 17  

003F 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
0042 EF                MOV     A,R7
0043 F0                MOVX    @DPTR,A
0044 D001              POP     AR1
0046 D002              POP     AR2
0048 D003              POP     AR3
004A 120000      E     LCALL   _sprintf
004D 900000      R     MOV     DPTR,#i
0050 EE                MOV     A,R6
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
0055 7B01              MOV     R3,#01H
0057 7A00        R     MOV     R2,#HIGH array
0059 7900        R     MOV     R1,#LOW array
005B 900000      R     MOV     DPTR,#i
005E E0                MOVX    A,@DPTR
005F FE                MOV     R6,A
0060 A3                INC     DPTR
0061 E0                MOVX    A,@DPTR
0062 FF                MOV     R7,A
0063 AD07              MOV     R5,AR7
0065 120000      E     LCALL   _DATA_COM_PutArray
                                           ; SOURCE LINE # 275
0068 900000      R     MOV     DPTR,#status
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
006D 22                RET     
                                           ; SOURCE LINE # 276
006E         ?C0011:
                                           ; SOURCE LINE # 279
006E 900000      R     MOV     DPTR,#subAddr
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 120000      E     LCALL   _HMC5883L_I2C_MasterWriteByte
0076 900000      R     MOV     DPTR,#status
0079 EF                MOV     A,R7
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 280
007B 900000      R     MOV     DPTR,#status
007E E0                MOVX    A,@DPTR
007F FF                MOV     R7,A
0080 EF                MOV     A,R7
0081 604C              JZ      ?C0013
                                           ; SOURCE LINE # 281
0083 7B01              MOV     R3,#01H
0085 7A00        R     MOV     R2,#HIGH array
0087 7900        R     MOV     R1,#LOW array
0089 C003              PUSH    AR3
008B C002              PUSH    AR2
008D C001              PUSH    AR1
008F 7BFF              MOV     R3,#0FFH
0091 7A00        R     MOV     R2,#HIGH ?SC_222
0093 7900        R     MOV     R1,#LOW ?SC_222
0095 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0098 120000      E     LCALL   ?C?PSTXDATA
009B 900000      R     MOV     DPTR,#status
009E E0                MOVX    A,@DPTR
009F FF                MOV     R7,A
00A0 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 18  

00A3 EF                MOV     A,R7
00A4 F0                MOVX    @DPTR,A
00A5 D001              POP     AR1
00A7 D002              POP     AR2
00A9 D003              POP     AR3
00AB 120000      E     LCALL   _sprintf
00AE 900000      R     MOV     DPTR,#i
00B1 EE                MOV     A,R6
00B2 F0                MOVX    @DPTR,A
00B3 A3                INC     DPTR
00B4 EF                MOV     A,R7
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 282
00B6 7B01              MOV     R3,#01H
00B8 7A00        R     MOV     R2,#HIGH array
00BA 7900        R     MOV     R1,#LOW array
00BC 900000      R     MOV     DPTR,#i
00BF E0                MOVX    A,@DPTR
00C0 FE                MOV     R6,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 AD07              MOV     R5,AR7
00C6 120000      E     LCALL   _DATA_COM_PutArray
                                           ; SOURCE LINE # 283
00C9 900000      R     MOV     DPTR,#status
00CC E0                MOVX    A,@DPTR
00CD FF                MOV     R7,A
00CE 22                RET     
                                           ; SOURCE LINE # 284
00CF         ?C0013:
                                           ; SOURCE LINE # 286
00CF 900000      R     MOV     DPTR,#i
00D2 E4                CLR     A
00D3 F0                MOVX    @DPTR,A
00D4 A3                INC     DPTR
00D5 E4                CLR     A
00D6 F0                MOVX    @DPTR,A
00D7         ?C0014:
00D7 900000      R     MOV     DPTR,#buff_size
00DA E0                MOVX    A,@DPTR
00DB FF                MOV     R7,A
00DC 7E00              MOV     R6,#00H
00DE 900000      R     MOV     DPTR,#i
00E1 E0                MOVX    A,@DPTR
00E2 FC                MOV     R4,A
00E3 A3                INC     DPTR
00E4 E0                MOVX    A,@DPTR
00E5 FD                MOV     R5,A
00E6 C3                CLR     C
00E7 ED                MOV     A,R5
00E8 9F                SUBB    A,R7
00E9 EE                MOV     A,R6
00EA 6480              XRL     A,#080H
00EC F8                MOV     R0,A
00ED EC                MOV     A,R4
00EE 6480              XRL     A,#080H
00F0 98                SUBB    A,R0
00F1 503A              JNC     ?C0015
                                           ; SOURCE LINE # 287
00F3 900000      R     MOV     DPTR,#buffer
00F6 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 19  

00F9 900000      R     MOV     DPTR,#i
00FC E0                MOVX    A,@DPTR
00FD FE                MOV     R6,A
00FE A3                INC     DPTR
00FF E0                MOVX    A,@DPTR
0100 FF                MOV     R7,A
0101 E9                MOV     A,R1
0102 2F                ADD     A,R7
0103 F9                MOV     R1,A
0104 EA                MOV     A,R2
0105 3E                ADDC    A,R6
0106 FA                MOV     R2,A
0107 120000      E     LCALL   ?C?CLDPTR
010A FF                MOV     R7,A
010B 120000      E     LCALL   _HMC5883L_I2C_MasterWriteByte
010E 900000      R     MOV     DPTR,#status
0111 EF                MOV     A,R7
0112 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
0113 900000      R     MOV     DPTR,#status
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 EF                MOV     A,R7
0119 6006              JZ      ?C0016
                                           ; SOURCE LINE # 289
011B 900000      R     MOV     DPTR,#status
011E E0                MOVX    A,@DPTR
011F FF                MOV     R7,A
0120 22                RET     
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
0121         ?C0016:
0121 900000      R     MOV     DPTR,#i
0124 E4                CLR     A
0125 75F001            MOV     B,#01H
0128 120000      E     LCALL   ?C?IILDX
012B 80AA              SJMP    ?C0014
012D         ?C0015:
                                           ; SOURCE LINE # 295
012D 120000      E     LCALL   HMC5883L_I2C_MasterSendStop
0130 900000      R     MOV     DPTR,#status
0133 EF                MOV     A,R7
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
0135 900000      R     MOV     DPTR,#status
0138 E0                MOVX    A,@DPTR
0139 FF                MOV     R7,A
013A EF                MOV     A,R7
013B 6006              JZ      ?C0018
                                           ; SOURCE LINE # 297
013D 900000      R     MOV     DPTR,#status
0140 E0                MOVX    A,@DPTR
0141 FF                MOV     R7,A
0142 22                RET     
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 300
0143         ?C0018:
                                           ; SOURCE LINE # 301
0143 900000      R     MOV     DPTR,#status
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 20  

0146 E0                MOVX    A,@DPTR
0147 FF                MOV     R7,A
                                           ; SOURCE LINE # 302
0148         ?C0012:
0148 22                RET     
             ; FUNCTION _i2c_write (END)

             ; FUNCTION _i2c_read (BEGIN)
                                           ; SOURCE LINE # 303
0000 900000      R     MOV     DPTR,#subAddr
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#buffer
0008 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 309
000B 120000      E     LCALL   HMC5883L_I2C_MasterClearStatus
                                           ; SOURCE LINE # 310
000E 7BFF              MOV     R3,#0FFH
0010 7A00        R     MOV     R2,#HIGH ?SC_240
0012 7900        R     MOV     R1,#LOW ?SC_240
0014 120000      E     LCALL   _DATA_COM_PutString
                                           ; SOURCE LINE # 312
0017 7D00              MOV     R5,#00H
0019 7F0E              MOV     R7,#0EH
001B 120000      E     LCALL   _HMC5883L_I2C_MasterSendStart
001E 900000      R     MOV     DPTR,#status
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
0023 900000      R     MOV     DPTR,#status
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 604C              JZ      ?C0019
                                           ; SOURCE LINE # 314
002B 7B01              MOV     R3,#01H
002D 7A00        R     MOV     R2,#HIGH array
002F 7900        R     MOV     R1,#LOW array
0031 C003              PUSH    AR3
0033 C002              PUSH    AR2
0035 C001              PUSH    AR1
0037 7BFF              MOV     R3,#0FFH
0039 7A00        R     MOV     R2,#HIGH ?SC_257
003B 7900        R     MOV     R1,#LOW ?SC_257
003D 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0040 120000      E     LCALL   ?C?PSTXDATA
0043 900000      R     MOV     DPTR,#status
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
004D D001              POP     AR1
004F D002              POP     AR2
0051 D003              POP     AR3
0053 120000      E     LCALL   _sprintf
0056 900000      R     MOV     DPTR,#i
0059 EE                MOV     A,R6
005A F0                MOVX    @DPTR,A
005B A3                INC     DPTR
005C EF                MOV     A,R7
005D F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 21  

                                           ; SOURCE LINE # 315
005E 7B01              MOV     R3,#01H
0060 7A00        R     MOV     R2,#HIGH array
0062 7900        R     MOV     R1,#LOW array
0064 900000      R     MOV     DPTR,#i
0067 E0                MOVX    A,@DPTR
0068 FE                MOV     R6,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FF                MOV     R7,A
006C AD07              MOV     R5,AR7
006E 120000      E     LCALL   _DATA_COM_PutArray
                                           ; SOURCE LINE # 316
0071 900000      R     MOV     DPTR,#status
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
0076 22                RET     
                                           ; SOURCE LINE # 317
0077         ?C0019:
                                           ; SOURCE LINE # 318
0077 7BFF              MOV     R3,#0FFH
0079 7A00        R     MOV     R2,#HIGH ?SC_240
007B 7900        R     MOV     R1,#LOW ?SC_240
007D 120000      E     LCALL   _DATA_COM_PutString
                                           ; SOURCE LINE # 319
0080 7F00              MOV     R7,#00H
0082 120000      E     LCALL   _HMC5883L_I2C_MasterReadByte
0085 900000      R     MOV     DPTR,#buffer
0088 120000      E     LCALL   ?C?PLDXDATA
008B EF                MOV     A,R7
008C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 321
008F 900000      R     MOV     DPTR,#subAddr
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 120000      E     LCALL   _HMC5883L_I2C_MasterWriteByte
0097 900000      R     MOV     DPTR,#status
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
009C 900000      R     MOV     DPTR,#status
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 6006              JZ      ?C0021
                                           ; SOURCE LINE # 323
00A4 900000      R     MOV     DPTR,#status
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 22                RET     
                                           ; SOURCE LINE # 324
00AA         ?C0021:
                                           ; SOURCE LINE # 326
00AA 7D01              MOV     R5,#01H
00AC 7F0E              MOV     R7,#0EH
00AE 120000      E     LCALL   _HMC5883L_I2C_MasterSendRestart
00B1 900000      R     MOV     DPTR,#status
00B4 EF                MOV     A,R7
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
00B6 900000      R     MOV     DPTR,#status
00B9 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 22  

00BA FF                MOV     R7,A
00BB EF                MOV     A,R7
00BC 6006              JZ      ?C0022
                                           ; SOURCE LINE # 328
00BE 900000      R     MOV     DPTR,#status
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 22                RET     
                                           ; SOURCE LINE # 329
00C4         ?C0022:
                                           ; SOURCE LINE # 331
00C4 900000      R     MOV     DPTR,#i
00C7 E4                CLR     A
00C8 F0                MOVX    @DPTR,A
00C9 A3                INC     DPTR
00CA E4                CLR     A
00CB F0                MOVX    @DPTR,A
00CC         ?C0023:
00CC 900000      R     MOV     DPTR,#buff_size
00CF E0                MOVX    A,@DPTR
00D0 FF                MOV     R7,A
00D1 7E00              MOV     R6,#00H
00D3 900000      R     MOV     DPTR,#i
00D6 E0                MOVX    A,@DPTR
00D7 FC                MOV     R4,A
00D8 A3                INC     DPTR
00D9 E0                MOVX    A,@DPTR
00DA FD                MOV     R5,A
00DB C3                CLR     C
00DC ED                MOV     A,R5
00DD 9F                SUBB    A,R7
00DE EE                MOV     A,R6
00DF 6480              XRL     A,#080H
00E1 F8                MOV     R0,A
00E2 EC                MOV     A,R4
00E3 6480              XRL     A,#080H
00E5 98                SUBB    A,R0
00E6 504C              JNC     ?C0024
                                           ; SOURCE LINE # 332
00E8 900000      R     MOV     DPTR,#buff_size
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
00ED EF                MOV     A,R7
00EE 14                DEC     A
00EF FF                MOV     R7,A
00F0 7E00              MOV     R6,#00H
00F2 900000      R     MOV     DPTR,#i
00F5 E0                MOVX    A,@DPTR
00F6 FC                MOV     R4,A
00F7 A3                INC     DPTR
00F8 E0                MOVX    A,@DPTR
00F9 FD                MOV     R5,A
00FA C3                CLR     C
00FB ED                MOV     A,R5
00FC 9F                SUBB    A,R7
00FD EE                MOV     A,R6
00FE 6480              XRL     A,#080H
0100 F8                MOV     R0,A
0101 EC                MOV     A,R4
0102 6480              XRL     A,#080H
0104 98                SUBB    A,R0
0105 5004              JNC     ?C0026
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 23  

0107 7F01              MOV     R7,#01H
0109 8002              SJMP    ?C0027
010B         ?C0026:
010B 7F00              MOV     R7,#00H
010D         ?C0027:
010D 120000      E     LCALL   _HMC5883L_I2C_MasterReadByte
0110 900000      R     MOV     DPTR,#buffer
0113 120000      E     LCALL   ?C?PLDXDATA
0116 900000      R     MOV     DPTR,#i
0119 E0                MOVX    A,@DPTR
011A FC                MOV     R4,A
011B A3                INC     DPTR
011C E0                MOVX    A,@DPTR
011D FD                MOV     R5,A
011E E9                MOV     A,R1
011F 2D                ADD     A,R5
0120 F9                MOV     R1,A
0121 EA                MOV     A,R2
0122 3C                ADDC    A,R4
0123 FA                MOV     R2,A
0124 EF                MOV     A,R7
0125 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 333
0128 900000      R     MOV     DPTR,#i
012B E4                CLR     A
012C 75F001            MOV     B,#01H
012F 120000      E     LCALL   ?C?IILDX
0132 8098              SJMP    ?C0023
0134         ?C0024:
                                           ; SOURCE LINE # 335
0134 120000      E     LCALL   HMC5883L_I2C_MasterSendStop
0137 900000      R     MOV     DPTR,#status
013A EF                MOV     A,R7
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
013C 900000      R     MOV     DPTR,#status
013F E0                MOVX    A,@DPTR
0140 FF                MOV     R7,A
0141 EF                MOV     A,R7
0142 6006              JZ      ?C0028
                                           ; SOURCE LINE # 337
0144 900000      R     MOV     DPTR,#status
0147 E0                MOVX    A,@DPTR
0148 FF                MOV     R7,A
0149 22                RET     
                                           ; SOURCE LINE # 338
014A         ?C0028:
                                           ; SOURCE LINE # 339
014A 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 340
014C         ?C0020:
014C 22                RET     
             ; FUNCTION _i2c_read (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1567    ----
   CONSTANT SIZE    =    263    ----
   XDATA SIZE       =      3     194
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.51   MAIN                                                                  07/21/2014 13:49:43 PAGE 24  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
